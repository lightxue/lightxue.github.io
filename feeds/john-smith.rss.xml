<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>0xFEE1C001 - John Smith</title><link>http://www.lightxue.com/</link><description>Where there is a shell, there is a way</description><lastBuildDate>Fri, 10 Apr 2015 16:50:24 +0800</lastBuildDate><item><title>关于barrier</title><link>http://www.lightxue.com/about-barries</link><description>&lt;p&gt;再次收到John Smith的来稿，为了你这篇稿子，我停笔一年了呀。&lt;/p&gt;
&lt;p&gt;memory barrier内存屏障，一种非常底层的同步原语，是memory ordering的一部分。
使用内存屏障可以阻止编译器或cpu对内存的乱序访问，其中阻止编译时期重排的叫做
compiler barrier，阻止运行时期重排的叫做memory barrier。&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Smith</dc:creator><pubDate>Fri, 10 Apr 2015 16:50:24 +0800</pubDate><guid isPermaLink="false">tag:www.lightxue.com,2015-04-10:/about-barries</guid><category>C</category></item><item><title>strlen的实现方法</title><link>http://www.lightxue.com/strlen-implementation</link><description>&lt;p&gt;感谢&lt;a href="https://plus.google.com/u/0/102034236640204820044"&gt;John Smith&lt;/a&gt;来稿，笔风太有趣了，能当本博的专栏作家吗？
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Smith</dc:creator><pubDate>Sat, 07 Dec 2013 22:23:46 +0800</pubDate><guid isPermaLink="false">tag:www.lightxue.com,2013-12-07:/strlen-implementation</guid><category>C</category></item></channel></rss>